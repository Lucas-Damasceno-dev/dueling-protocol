server:
  port: ${SERVER_PORT:8080}
  name: ${SERVER_NAME:localhost}

spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:dueling_db}
    username: ${POSTGRES_USER:dueling_user}
    password: ${POSTGRES_PASSWORD:dueling_password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
      use-second-level-cache: true
      use-query-cache: true
      cache:
        use-minimal-puts: true
        region.factory_class: org.redisson.hibernate.RedissonRegionFactory
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        cache.redisson.instance_name: redissonClient 

jwt:
  secret: ${JWT_SECRET:mySecretKeyForDuelingProtocolThatShouldBeLongerThan256Bits}
  expiration: ${JWT_EXPIRATION:86400000}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    tags:
      application: dueling-protocol

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.springframework.web.socket: DEBUG
    service.matchmaking: DEBUG
    api: DEBUG
    websocket: DEBUG

client:
  default-host: ${SERVER_HOST:localhost}
  default-port: ${SERVER_PORT:8080}