events {
    worker_connections 1024;
}

http {
    # Resolver do Docker para resolução de nomes em tempo de execução
    resolver 127.0.0.11 valid=10s;

    # Mapa para conexões WebSocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Servidor principal
    server {
        listen 8080;
        
        # Endpoint para health check do NGINX
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Proxy pass for regular API requests with dynamic server resolution
        location ~ ^/api/ {
            # Use proxy_pass with variables for dynamic DNS resolution
            set $backend "server-1";
            proxy_pass http://$backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Id $http_x_user_id;
            proxy_set_header X-User-Roles $http_x_user_roles;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            # Tenta outros servidores em caso de falha (configurado via script de inicialização)
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Proxy pass for WebSocket connections with dynamic server resolution
        location ~ ^/ws(?:/(.*))? {
            set $backend "server-1";
            proxy_pass http://$backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-User-Id $http_x_user_id;
            proxy_set_header X-User-Roles $http_x_user_roles;
            proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
            proxy_connect_timeout 10s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            # Tenta outros servidores em caso de falha
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
        
        # Health check endpoint with dynamic server resolution
        location /actuator/health {
            set $backend "server-1";
            proxy_pass http://$backend:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}